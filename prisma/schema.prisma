generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categories {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(100)
  description        String?
  Product_Categories Product_Categories[]
}

model Order_Items {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int?
  price      Decimal?  @db.Decimal(10, 2)
  Orders     Orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Products   Products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Orders {
  id           Int           @id @default(autoincrement())
  user_id      Int?
  total_amount Decimal?      @db.Decimal(10, 2)
  status       String?       @db.VarChar(50)
  created_at   DateTime?     @default(now()) @db.Timestamp(6)
  updated_at   DateTime?     @default(now()) @db.Timestamp(6)
  Order_Items  Order_Items[]
  Users        Users?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Payments     Payments[]
}

model Payments {
  id             Int       @id @default(autoincrement())
  order_id       Int?
  payment_method String?   @db.VarChar(50)
  amount_paid    Decimal?  @db.Decimal(10, 2)
  payment_status String?   @db.VarChar(50)
  payment_date   DateTime? @default(now()) @db.Timestamp(6)
  Orders         Orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Product_Categories {
  product_id  Int
  category_id Int
  Categories  Categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Products    Products   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([product_id, category_id])
}

model Products {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(100)
  description        String?
  price              Decimal?             @db.Decimal(10, 2)
  stock              Int?
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  image_url          String?              @db.VarChar(255)
  Order_Items        Order_Items[]
  Product_Categories Product_Categories[]
}

model Users {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(100)
  email      String?   @unique @db.VarChar(100)
  password   String?   @db.VarChar(255)
  role       String?   @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  Orders     Orders[]
}
